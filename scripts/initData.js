const fs = require('fs').promises;
const path = require('path');
const { generateMockEvents } = require('../utils/dataGenerator');

async function initializeData() {
    try {
        console.log('üîÑ Initializing data...');
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const mockEvents = generateMockEvents(20);
        
        const eventsData = {
            lastUpdated: new Date().toISOString(),
            events: mockEvents
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º events.json
        await fs.writeFile(
            path.join(__dirname, '../data/events.json'),
            JSON.stringify(eventsData, null, 2)
        );
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categories = [
            { id: "all", name: "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", count: mockEvents.length },
            { id: "concert", name: "–ö–æ–Ω—Ü–µ—Ä—Ç—ã", count: mockEvents.filter(e => e.category === 'concert').length },
            { id: "theatre", name: "–¢–µ–∞—Ç—Ä—ã", count: mockEvents.filter(e => e.category === 'theatre').length },
            { id: "festival", name: "–§–µ—Å—Ç–∏–≤–∞–ª–∏", count: mockEvents.filter(e => e.category === 'festival').length },
            { id: "exhibition", name: "–í—ã—Å—Ç–∞–≤–∫–∏", count: mockEvents.filter(e => e.category === 'exhibition').length },
            { id: "sport", name: "–°–ø–æ—Ä—Ç", count: mockEvents.filter(e => e.category === 'sport').length },
            { id: "standup", name: "–°—Ç–µ–Ω–¥–∞–ø", count: mockEvents.filter(e => e.category === 'standup').length },
            { id: "kids", name: "–î–µ—Ç—Å–∫–∏–µ", count: mockEvents.filter(e => e.category === 'kids').length }
        ];
        
        await fs.writeFile(
            path.join(__dirname, '../data/categories.json'),
            JSON.stringify(categories, null, 2)
        );
        
        console.log('‚úÖ Data initialized successfully!');
        console.log(`üìä Generated ${mockEvents.length} events`);
        console.log(`üóÇ Created ${categories.length} categories`);
        
    } catch (error) {
        console.error('‚ùå Error initializing data:', error);
    }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    initializeData();
}

module.exports = initializeData;