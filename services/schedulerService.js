const cron = require('node-cron');
const ParserService = require('./parserService');
const CacheService = require('./cacheService');

class SchedulerService {
    init() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
        cron.schedule('*/15 * * * *', async () => {
            console.log('üîÑ Scheduled cache refresh started');
            try {
                // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à
                CacheService.clear();
                
                // –ü–∞—Ä—Å–∏–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
                await ParserService.parseAllPlatforms('');
                await ParserService.parseAllPlatforms('–∫–æ–Ω—Ü–µ—Ä—Ç');
                await ParserService.parseAllPlatforms('—Ç–µ–∞—Ç—Ä');
                
                console.log('‚úÖ Scheduled cache refresh completed');
            } catch (error) {
                console.error('‚ùå Scheduled cache refresh failed:', error);
            }
        });

        // –ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π —á–∞—Å
        cron.schedule('0 * * * *', async () => {
            console.log('üîÑ Full data refresh started');
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        });
    }
}

module.exports = new SchedulerService();